// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

// dirichlet_mle
Rcpp::List dirichlet_mle(Rcpp::List w_list);
RcppExport SEXP _mixedWarpedCurves2_dirichlet_mle(SEXP w_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type w_list(w_listSEXP);
    rcpp_result_gen = Rcpp::wrap(dirichlet_mle(w_list));
    return rcpp_result_gen;
END_RCPP
}
// em_mixture_of_dirichlet
Rcpp::List em_mixture_of_dirichlet(Rcpp::NumericMatrix data, Rcpp::NumericVector init_clust, int dim_m, int maxit);
RcppExport SEXP _mixedWarpedCurves2_em_mixture_of_dirichlet(SEXP dataSEXP, SEXP init_clustSEXP, SEXP dim_mSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type init_clust(init_clustSEXP);
    Rcpp::traits::input_parameter< int >::type dim_m(dim_mSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(em_mixture_of_dirichlet(data, init_clust, dim_m, maxit));
    return rcpp_result_gen;
END_RCPP
}
// saem_fit
Rcpp::List saem_fit(Rcpp::List curve_list, Rcpp::List pars_list, Rcpp::List control_list, double y_scaling_factor, bool trace);
RcppExport SEXP _mixedWarpedCurves2_saem_fit(SEXP curve_listSEXP, SEXP pars_listSEXP, SEXP control_listSEXP, SEXP y_scaling_factorSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type curve_list(curve_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pars_list(pars_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control_list(control_listSEXP);
    Rcpp::traits::input_parameter< double >::type y_scaling_factor(y_scaling_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(saem_fit(curve_list, pars_list, control_list, y_scaling_factor, trace));
    return rcpp_result_gen;
END_RCPP
}
// saem_fit_mixed_shape
Rcpp::List saem_fit_mixed_shape(Rcpp::List curve_list, Rcpp::List pars_list, Rcpp::List control_list, double y_scl_r, bool trace);
RcppExport SEXP _mixedWarpedCurves2_saem_fit_mixed_shape(SEXP curve_listSEXP, SEXP pars_listSEXP, SEXP control_listSEXP, SEXP y_scl_rSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type curve_list(curve_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pars_list(pars_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control_list(control_listSEXP);
    Rcpp::traits::input_parameter< double >::type y_scl_r(y_scl_rSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(saem_fit_mixed_shape(curve_list, pars_list, control_list, y_scl_r, trace));
    return rcpp_result_gen;
END_RCPP
}
// saem_fit_mixed_warped_curves
Rcpp::List saem_fit_mixed_warped_curves(Rcpp::List curve_list, Rcpp::List pars_list, Rcpp::List control_list, double y_scaling_factor, bool trace);
RcppExport SEXP _mixedWarpedCurves2_saem_fit_mixed_warped_curves(SEXP curve_listSEXP, SEXP pars_listSEXP, SEXP control_listSEXP, SEXP y_scaling_factorSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type curve_list(curve_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pars_list(pars_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control_list(control_listSEXP);
    Rcpp::traits::input_parameter< double >::type y_scaling_factor(y_scaling_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(saem_fit_mixed_warped_curves(curve_list, pars_list, control_list, y_scaling_factor, trace));
    return rcpp_result_gen;
END_RCPP
}
// saem_fit_mixed_warping
Rcpp::List saem_fit_mixed_warping(Rcpp::List curve_list, Rcpp::List pars_list, Rcpp::List control_list, double y_scaling_factor, bool trace);
RcppExport SEXP _mixedWarpedCurves2_saem_fit_mixed_warping(SEXP curve_listSEXP, SEXP pars_listSEXP, SEXP control_listSEXP, SEXP y_scaling_factorSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type curve_list(curve_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pars_list(pars_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control_list(control_listSEXP);
    Rcpp::traits::input_parameter< double >::type y_scaling_factor(y_scaling_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(saem_fit_mixed_warping(curve_list, pars_list, control_list, y_scaling_factor, trace));
    return rcpp_result_gen;
END_RCPP
}
// saem_fit_mixture_a_model
Rcpp::List saem_fit_mixture_a_model(Rcpp::List curve_list, Rcpp::List pars_list, Rcpp::List control_list, double y_scaling_factor, bool trace);
RcppExport SEXP _mixedWarpedCurves2_saem_fit_mixture_a_model(SEXP curve_listSEXP, SEXP pars_listSEXP, SEXP control_listSEXP, SEXP y_scaling_factorSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type curve_list(curve_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pars_list(pars_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control_list(control_listSEXP);
    Rcpp::traits::input_parameter< double >::type y_scaling_factor(y_scaling_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(saem_fit_mixture_a_model(curve_list, pars_list, control_list, y_scaling_factor, trace));
    return rcpp_result_gen;
END_RCPP
}
// saem_fit_unimodal
Rcpp::List saem_fit_unimodal(Rcpp::List curve_list, Rcpp::List pars_list, Rcpp::List control_list, double y_scaling_factor, bool trace);
RcppExport SEXP _mixedWarpedCurves2_saem_fit_unimodal(SEXP curve_listSEXP, SEXP pars_listSEXP, SEXP control_listSEXP, SEXP y_scaling_factorSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type curve_list(curve_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pars_list(pars_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type control_list(control_listSEXP);
    Rcpp::traits::input_parameter< double >::type y_scaling_factor(y_scaling_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(saem_fit_unimodal(curve_list, pars_list, control_list, y_scaling_factor, trace));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mixedWarpedCurves2_dirichlet_mle", (DL_FUNC) &_mixedWarpedCurves2_dirichlet_mle, 1},
    {"_mixedWarpedCurves2_em_mixture_of_dirichlet", (DL_FUNC) &_mixedWarpedCurves2_em_mixture_of_dirichlet, 4},
    {"_mixedWarpedCurves2_saem_fit", (DL_FUNC) &_mixedWarpedCurves2_saem_fit, 5},
    {"_mixedWarpedCurves2_saem_fit_mixed_shape", (DL_FUNC) &_mixedWarpedCurves2_saem_fit_mixed_shape, 5},
    {"_mixedWarpedCurves2_saem_fit_mixed_warped_curves", (DL_FUNC) &_mixedWarpedCurves2_saem_fit_mixed_warped_curves, 5},
    {"_mixedWarpedCurves2_saem_fit_mixed_warping", (DL_FUNC) &_mixedWarpedCurves2_saem_fit_mixed_warping, 5},
    {"_mixedWarpedCurves2_saem_fit_mixture_a_model", (DL_FUNC) &_mixedWarpedCurves2_saem_fit_mixture_a_model, 5},
    {"_mixedWarpedCurves2_saem_fit_unimodal", (DL_FUNC) &_mixedWarpedCurves2_saem_fit_unimodal, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_mixedWarpedCurves2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
